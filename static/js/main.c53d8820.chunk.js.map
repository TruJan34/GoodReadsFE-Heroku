{"version":3,"sources":["actions/bookActions.js","components/booklist/index.js","actions/types.js","components/bookInfo/index.js","components/search/index.js","reducers/bookReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","BookListComponent","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","bind","assertThisInitialized","inherits","createClass","key","value","book","getBook","best_book","title","_this2","bookList","booksList","length","map","index","react_default","a","createElement","Fragment","loading","Component","connect","state","books","error","selectedBook","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","res","wrap","_context2","prev","next","type","post","sent","data","GoodreadsResponse","payload","t0","console","log","stop","_x2","apply","arguments","BookInfoComponent","rate","Math","round","average_rating","class","src","image_url","alt","width","authors","author","i","name","toString","className","ratings_count","text_reviews_count","description","SearchComponent","searchKey","onChange","onSubmit","e","setState","target","preventDefault","createSearch","booklist","bookInfo","_ref","_callee","_context","search","results","work","_x","initialState","undefined","combineReducers","action","objectSpread","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c53d8820.chunk.js","sourcesContent":["import { SEARCH_BOOK, LOADING, ERROR, BOOK_SELECT } from './types';\r\nconst axios = require('axios');\r\n\r\nexport const createSearch = searchKey => async dispatch => {\r\n  dispatch({ type: LOADING });\r\n  try {\r\n    const res = await axios.post('https://murmuring-atoll-47071.herokuapp.com/search', { searchKey });\r\n    if (res.data.GoodreadsResponse.search.results.work) {\r\n      dispatch({\r\n        type: SEARCH_BOOK,\r\n        payload: res.data.GoodreadsResponse.search.results.work\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: 'No Books Found. Please search with other Title.'\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: ERROR, payload: 'Error during book search' });\r\n  }\r\n};\r\n\r\nexport const getBook = book => async dispatch => {\r\n  dispatch({ type: LOADING });\r\n  try {\r\n    const res = await axios.post('https://murmuring-atoll-47071.herokuapp.com/book', { book });\r\n    if (res.data.GoodreadsResponse.book) {\r\n      dispatch({\r\n        type: BOOK_SELECT,\r\n        payload: res.data.GoodreadsResponse.book\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: 'Error while fetching book details'\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: ERROR, payload: 'Error while fetching book details' });\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBook } from '../../actions/bookActions';\r\n\r\nexport class BookListComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick(book) {\r\n    this.props.getBook(book.best_book.title);\r\n  }\r\n\r\n  render() {\r\n    const bookList =\r\n      this.props.booksList.length > 0 &&\r\n      this.props.booksList.map((book, index) => (\r\n        <li key={index} onClick={() => this.onClick(book)}>\r\n          {book.best_book.title}\r\n        </li>\r\n      ));\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {bookList && <h1>Searched Books :- </h1>}\r\n        {!this.props.loading && <ol>{bookList}</ol>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBookListComponent.propTypes = {\r\n  getBook: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    booksList: state.books.booksList,\r\n    loading: state.books.loading,\r\n    error: state.books.error,\r\n    selectedBook: state.books.selectedBook\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBook }\r\n)(BookListComponent);\r\n","export const SEARCH_BOOK = 'SEARCH_BOOK';\r\nexport const LOADING = 'LOADING';\r\nexport const ERROR = 'ERROR';\r\nexport const BOOK_SELECT = 'BOOK_SELECT';\r\nexport const CLEAR_SELECT = 'CLEAR_SELECT';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass BookInfoComponent extends Component {\r\n  render() {\r\n    const rate =\r\n      'rating-static rating-' +\r\n      5 * Math.round((this.props.selectedBook.average_rating * 10) / 5);\r\n    return (\r\n      <React.Fragment>\r\n        <h1>BookInfo</h1>\r\n        <div class=\"container\">\r\n          <div class=\"div1\">\r\n            <img\r\n              src={this.props.selectedBook.image_url}\r\n              alt=\"Book Image\"\r\n              width=\"400\"\r\n            />\r\n          </div>\r\n          <div class=\"div2\">\r\n            <h2>{this.props.selectedBook.title}</h2>\r\n            <h6>\r\n              By{' '}\r\n              {this.props.selectedBook.authors.author.length > 0\r\n                ? this.props.selectedBook.authors.author\r\n                    .map(i => i.name)\r\n                    .toString()\r\n                : this.props.selectedBook.authors.author.name}\r\n            </h6>\r\n            <div>\r\n              <b>Avg Rating :</b>({this.props.selectedBook.average_rating})\r\n              <div className={rate} />\r\n            </div>{' '}\r\n            <b>Rating Count :</b> {this.props.selectedBook.ratings_count}\r\n            <b> Reviews :</b>\r\n            {this.props.selectedBook.text_reviews_count}\r\n            <br />\r\n            <span>{this.props.selectedBook.description}</span>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  debugger;\r\n  return {\r\n    booksList: state.books.booksList,\r\n    loading: state.books.loading,\r\n    error: state.books.error,\r\n    selectedBook: state.books.selectedBook\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(BookInfoComponent);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createSearch } from '../../actions/bookActions';\r\nimport BookListComponent from '../booklist';\r\nimport BookInfoComponent from '../bookInfo';\r\n\r\nexport class SearchComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchKey: ''\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ searchKey: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.createSearch(this.state.searchKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Search Book</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div>\r\n            <label>Enter Book Name: </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"searchKey\"\r\n              onChange={this.onChange}\r\n              value={this.state.searchKey}\r\n            />\r\n          </div>\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        {!this.props.loading && !this.props.selectedBook && (\r\n          <BookListComponent />\r\n        )}\r\n        {this.props.loading && (\r\n          <div>\r\n            <h2>Loading .... </h2>\r\n            <h6>Fetching data from 3rd party API</h6>\r\n          </div>\r\n        )}\r\n        {!this.props.loading && this.props.selectedBook && (\r\n          <BookInfoComponent />\r\n        )}\r\n        <h5>{this.props.error}</h5>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSearchComponent.propTypes = {\r\n  createSearch: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    booksList: state.books.booksList,\r\n    loading: state.books.loading,\r\n    error: state.books.error,\r\n    selectedBook: state.books.selectedBook\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createSearch }\r\n)(SearchComponent);\r\n","import {\r\n  SEARCH_BOOK,\r\n  LOADING,\r\n  ERROR,\r\n  BOOK_SELECT,\r\n  CLEAR_SELECT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  booksList: [],\r\n  selectedBook: undefined,\r\n  loading: false,\r\n  error: undefined\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: undefined,\r\n        booksList: [],\r\n        selectedBook: undefined\r\n      };\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case SEARCH_BOOK:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        booksList: action.payload\r\n      };\r\n    case BOOK_SELECT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selectedBook: action.payload\r\n      };\r\n    case CLEAR_SELECT:\r\n      return {\r\n        ...state,\r\n        selectedBook: undefined\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport bookReducer from './bookReducer';\r\n\r\nexport default combineReducers({\r\n  books: bookReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n//   compose(\r\n    applyMiddleware(...middleware),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SearchComponent from './components/search';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"App\">\r\n          <SearchComponent/>\r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}